@model IEnumerable<Bakery.DB.Customer>

@{
    var searchCustomer = (AdminDashboard.Models.Entities.Customer.SearchCustomerModel)ViewBag.SearchCustomerModel;
}

@if (Model != null)
{
    foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.CustomerId }) |
                @Html.ActionLink("Details", "Details", new { id = item.CustomerId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.CustomerId })
            </td>
        </tr>
    }
    <tr>
        <td colspan="5">
            <ul class="pages">
                @for (int i = 1; i <= ViewBag.PagesCount; i++)
                {

                    <li>
                        @if (searchCustomer.Page == i)
                        {
                            @Ajax.ActionLink(i.ToString(), "PagesData", new
                       {
                           page = i,
                           rows = searchCustomer.Rows,
                           CustomerId = searchCustomer.CustomerId,
                           FirstName = searchCustomer.FirstName,
                           LastName = searchCustomer.LastName,
                           Email = searchCustomer.Email
                       }, new AjaxOptions
                       {
                           UpdateTargetId = "pagesdata"
                       }, new { @class = "active" })
                        }
                        else
                        {
                            @Ajax.ActionLink(i.ToString(), "PagesData", new
                       {
                           page = i,
                           rows = searchCustomer.Rows,
                           CustomerId = searchCustomer.CustomerId,
                           FirstName = searchCustomer.FirstName,
                           LastName = searchCustomer.LastName,
                           Email = searchCustomer.Email
                       }, new AjaxOptions
                       {
                           UpdateTargetId = "pagesdata"
                       })
                        }

                    </li>
                }
            </ul>
        </td>
    </tr>
}
else
{
    <tr>
        <td colspan="5">
            Could not found any data
        </td>
    </tr>
}
